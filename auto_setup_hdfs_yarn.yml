#Run your Hadoop cluster within 5 MINUTES...instead of manually (40 minutes)
# Points to remember - 
#   1. Run this script from the Namenode machine.
#   2. Specify the namenodeip in DATANODE SECTION and NAMENODE SECTION.
#   3. After running this script you have to :
#       a. Manually enter the IP and hostname of all DATANODES in  /etc/hosts  in NAMENODE.              (working on this automation)
#       b. Allow the firewall in AWS in all machines. (Port Num. 50070,50010,and the one you specify)
#   4. Now you can start the NameNode service  -    "hadoop-daemon.sh start namenode"
#       


#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------DATANODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>

# ---- Configuring DATA NODES and Name Node ----
---
 - hosts: localhost    # Group name of DATANODES  .. (Configure this in  /etc/ansible/hosts)
   sudo: yes
   vars:
     hadoop_url: http://13.234.66.67/summer19/bigdata/hadoop-2.7.3.tar.gz 
     java8_url: http://monalisa.cern.ch/MONALISA/download/java/jdk-8-linux-x64.rpm
     username: ec2-user
     namenodeip: ec2-13-235-13-125.ap-south-1.compute.amazonaws.com:10001
     datanodename: mydatanode
     namenodename: mynamenode
     namenodehostname: ec2-13-235-13-125.ap-south-1.compute.amazonaws.com
     private_ip: 172.31.38.98
   tasks:
    #- name: Downloading Hadoop V2 ...
    #  get_url:
    #   url: "{{hadoop_url}}"
    #   dest: /home/{{username}}/
   
   # - name: Installing Hadoop V2 in /home/user/...
   #   unarchive:
   #    src: "/home/{{username}}/hadoop-2.7.3.tar.gz"
   #   # dest: /home/{{username}}/
  
   # - name: Downloading Java 1.8 ...
   #   get_url: 
   #    url: "{{java8_url}}"
   #    dest: /home/{{username}}/java8.rpm
    
   # - name: Installing Java 1.8 ...
   #   yum:
   #    name: /home/{{username}}/java8.rpm 
   #    state: installed 
    
# ****************************************************
    - name: Setting up Paths ...
      blockinfile: 
       path: /home/{{username}}/.bashrc
       backup: yes
       block: |
        HADOOP_HOME=/home/{{username}}/hadoop-2.7.3
        JAVA_HOME=/usr/java/jdk1.8.0
        PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/sbin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
        export PATH

 # ****************************************************** 

    - name: Setting JAVA Path in HADOOP .. (hadoop-env.sh)
      lineinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/hadoop-env.sh
       regexp: '^export JAVA_HOME='
       line: 'export JAVA_HOME=/usr/java/jdk1.8.0'   
       
#    - name: Sourcing the bashrc file
 #     shell: source /home/{{username}}/.bashrc

# *************************************************************
    
    - name: Configuring DataNode and NameNode "core-site.xml "...
      blockinfile: 
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/core-site.xml
       backup: yes 
       insertafter: "<configuration>" 
       block: | 
        <property>
        <name>fs.defaultFS</name> 
        <value>hdfs://{{namenodeip}}</value> 
        </property> 

    - name: Managing Permissions
      shell: sudo chown {{username}}:{{username}} /home/{{username}}/hadoop-2.7.3 -R
    #**********************************************************

    
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------NAMENODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>
#  ----------  Configuring Name Node ----------   
   
    - name: Configuring NameNode " hdfs-site.xml "...
      blockinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/hdfs-site.xml
       backup: yes
       insertafter: "<configuration>"
       block: |
        <property> 
        <name>dfs.namenode.name.dir</name>
        <value>/home/{{username}}/{{namenodename}}</value> 
        </property>


        <property> 
        <name>dfs.datanode.data.dir</name>
        <value>/home/{{username}}/{{datanodename}}</value> 
        </property>

# *************************************** entry in hosts file *****************

    - name: Configuring hosts file..
      sudo: yes
      blockinfile:
       path: /etc/hosts
       block: |
        {{private_ip}}  {{namenodehostname}}

    - name: Configuring Host Names .........
      command: hostnamectl set-hostname {{namenodehostname}}
    
    #- name: bashrc reload
    #  shell: exec bash   
    #  args:
    #    executable:
    #      /bin/bash

    #- name: Formatting the NameNode ...
    #  command: hdfs namenode  -format
  
# ************************************************  


#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------DATANODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>
#  ----------  Configuring DATA Node ----------


    - name: formatting namenode...
      sudo: no 
      shell: hdfs namenode -format

    - name: Starting namenode..
      sudo: no
      shell: hadoop-daemon.sh start namenode  

    - name: Starting datanode
      sudo: no
      shell: hadoop-daemon.sh start datanode


# **********************************CONFIGURING YARN **************
    - name: making mapred-site.xml
      command: cp /home/{{username}}/hadoop-2.7.3/etc/hadoop/mapred-site.xml.template  /home/{{username}}/hadoop-2.7.3/etc/hadoop/mapred-site.xml

    - name: Configuring mapred-site.xml
      blockinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/mapred-site.xml
       insertafter: "<configuration>"       
       block: |
        <property>
        <name>mapreduce.framework.name</name>
        <value>yarn</value>
        </property>
      
    - name: Configuring yarn-site.xml
      blockinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/yarn-site.xml
       insertafter: "<configuration>"       
       block: |
        <property>
        <name>yarn.resourcemanager.resource-tracker.address</name>
        <value>{{namenodehostname}}:8025</value>
        </property>

        <property>
        <name>yarn.resourcemanager.scheduler.address</name>
        <value>{{namenodehostname}}:8030</value>
        </property>
 
        <property>
        <name>yarn.resourcemanager.address</name>
        <value>{{namenodehostname}}:8032</value>
        </property>
        
        <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
        </property>

    - name: Starting Resource manager
      sudo: no
      shell: yarn-daemon.sh start resourcemanager

    - name: Starting Node manager
      sudo: no
      shell: yarn-daemon.sh start nodemanager


