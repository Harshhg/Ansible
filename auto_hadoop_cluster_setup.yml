# Setup your Hadoop cluster within 5 MINUTES...instead of manually (40 minutes)
# Points to remember - 
#   1. Run this script from the Namenode machine.
#   2. Specify the namenodeip in DATANODE SECTION and NAMENODE SECTION.
#   3. After running this script you have to :
#       a. Manually enter the IP and hostname of all DATANODES in  /etc/hosts  in NAMENODE.              (working on this automation)
#       b. Allow the firewall in AWS in all machines. (Port Num. 50070,50010,and the one you specify)
#   4. Now you can start the NameNode service  -    "hadoop-daemon.sh start namenode"
#       


#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------DATANODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>

# ---- Configuring DATA NODES and Name Node ----
---
 - hosts: NN_and_DN    # Group name of DATANODES  .. (Configure this in  /etc/ansible/hosts)
   remote_user: "{{username}}"   # Datanode username
   sudo: yes
   tasks:
   # - name: Downloading Hadoop V2 ...
   #   get_url:
   #    url: "{{hadoop_url}}"
   #    dest: /home/{{username}}/
   
    - name: Installing Hadoop V2 in /home/user/...
      unarchive:
       src: "/home/{{username}}/hadoop-2.7.3.tar.gz"
       dest: /home/{{username}}/
  
   # - name: Downloading Java 1.8 ...
   #   get_url: 
   #    url: "{{java8_url}}"
   #    dest: /home/{{username}}/java8.rpm
   # 
    - name: Installing Java 1.8 ...
      yum:
       name: /home/{{username}}/java8.rpm 
       state: installed 
    
# ****************************************************
    - name: Setting up Paths ...
      blockinfile: 
       path: /home/{{username}}/.bashrc
       backup: yes
       block: |
        HADOOP_HOME=/home/{{username}}/hadoop-2.7.3
        JAVA_HOME=/usr/java/jdk1.8.0
        PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/sbin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin
        export PATH

 # ****************************************************** 

    - name: Setting JAVA Path in HADOOP .. (hadoop-env.sh)
      lineinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/hadoop-env.sh
       regexp: '^export JAVA_HOME='
       line: 'export JAVA_HOME=/usr/java/jdk1.8.0'   
       
#    - name: Sourcing the bashrc file
 #     shell: source /home/{{username}}/.bashrc

# *************************************************************
    
    - name: Configuring DataNode and NameNode "core-site.xml "...
      blockinfile: 
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/core-site.xml
       backup: yes 
       insertafter: "<configuration>" 
       block: | 
        <property>
        <name>fs.defaultFS</name> 
        <value>hdfs://{{namenodeip}}</value> 
        </property> 

    #**********************************************************

    



#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------DATANODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>
#  ----------  Configuring DATA Node ----------

 - hosts: datanode
   remote_user: "{{username}}"
   sudo: yes
   vars:
   tasks:
    - name: Configuring DataNode "hdfs-site.xml" ...
      blockinfile: 
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/hdfs-site.xml
       backup: yes 
       insertafter: "<configuration>" 
       block: | 
        <property>
        <name>dfs.datanode.data.dir</name> 
        <value>/home/{{username}}/{{datanodename}}</value> 
        </property> 

    - name: Starting the DATANODES ...
      command: hadoop-daemon.sh start datanode
   
#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<-----------------------------------NAMENODE SECTION --------------------------------------------------------->>>>>>>>>>>>>>>>>>>>>
#  ----------  Configuring Name Node ----------   
   
 - hosts: namenode
   remote_user: "{{username}}"
   sudo: yes
   vars:
   tasks:
    - name: Configuring NameNode " hdfs-site.xml "...
      blockinfile:
       path: /home/{{username}}/hadoop-2.7.3/etc/hadoop/hdfs-site.xml
       backup: yes
       insertafter: "<configuration>"
       block: |
        <property> 
        <name>dfs.namenode.name.dir</name>
        <value>/home/{{username}}/{{namenodename}}</value> 
        </property>



    - name: Configuring Host Names .........
      command: hostnamectl set-hostname {{namenodehostname}}
    
    - name: Formatting the NameNode ...
      command: hdfs namenode -y -format
  
# ************************************************  
