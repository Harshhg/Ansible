# Launch an AWS instance automatically..
# Required modules :  awscli, boto or boto3 install using PIP
# May get error if launched from root user..(boto error)
---
  - name: Launching an EC2 Instance
    hosts: localhost
    connection: local
    gather_facts: False
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: cloudtaskgroup
      image: ami-5b673c34
      region: ap-south-1
      keypair: harshawslinux
      count: 1

    tasks:
     - name: Create New security group name "cloudtaskgroup"
       local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for Newly Created EC2 Instance
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22 
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0

     - name: Launch the new t2 micro EC2 Instance
       local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
       register: ec2

     - name: Add the newly created host so that we can further contact it
       add_host:
        name: "{{ item.public_ip }}"
        groups: webservers
       with_items: "{{ ec2.instances }}"


     - name: Wait for EC2 Instance to come-up and ready for SSH
       local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
       with_items: "{{ ec2.instances }}"

- hosts: webservers
   remote_user: ec2-user
   sudo: yes
   gather_facts: no
   tasks:
     - name: Installing Packages HTTP and PHP ...
       yum:
        name: httpd,php
        state: present

     - name: Starting the HTTP server
       service:
        name: httpd
        state: started
        enabled: yes


     - name: Copying the PHP page in directory
       copy:
        src: /etc/ansible/playbooks/i1/index.php
        dest: /var/www/html/

     - name: Create the ELB only listening over port 80
       ec2_elb_lb:
        name: mylb
        state: present
        region: ap-south-1
        zones:
          - ap-south-1a
          - ap-south-1a
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
       register: elb

     - name: Add each EC2 instance to the ELB
       ec2_elb:
         ec2_elbs: mylb
-- INSERT --

